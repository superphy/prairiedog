version: 2.1
executors:
    testenv:
        working_directory: ~/repo
        docker:
            - image: superphy/tox-base:d698931a52ddeef64dcf5918b32790bcef75af61
    docker-publisher:
        environment:
            IMAGE_NAME: superphy/prairiedog
        docker:
            - image: circleci/buildpack-deps:stretch
jobs:
    test:
        executor: testenv
        steps:
            - checkout

            - run:
                  name: pull submodules
                  command: |
                      git submodule init
                      git submodule update --remote

            - run:
                  name: install dependencies
                  command: |
                      python3 -m venv venv
                      . venv/bin/activate
                      pip install -r requirements_dev.txt

            - run:
                  name: install lemongraph
                  command: |
                      . venv/bin/activate
                      apt-get update -y && apt-get install -y libffi-dev zlib1g-dev python-dev python-cffi libatlas-base-dev
                      pip install --upgrade cffi
                      cd lemongraph && python setup.py install

            - run:
                  name: install dgraph
                  command: |
                      curl https://get.dgraph.io -sSf | bash

            - run:
                  name: update pip
                  command: |
                      pip install --upgrade pip
                      pypy3 -m ensurepip
                      pypy3 -m pip install --upgrade pip

            # run tests!
            - run:
                  name: run tests
                  command: |
                      tox -v

            - run:
                  name: codecov
                  command: |
                      . venv/bin/activate
                      codecov
    build:
        executor: docker-publisher
        steps:
            - checkout
            - setup_remote_docker
            - run:
                  name: Build Docker image
                  command: |
                      docker build -t $IMAGE_NAME:latest .
            - run:
                  name: Archive Docker image
                  command: docker save -o image.tar $IMAGE_NAME
            - persist_to_workspace:
                  root: .
                  paths:
                      - ./image.tar
    test-build:
        executor: docker-publisher
        steps:
            - attach_workspace:
                  at: /tmp/workspace
            - setup_remote_docker
            - run:
                  name: Load archived Docker image
                  command: docker load -i /tmp/workspace/image.tar
            - run:
                  name: Test built Docker image
                  command: |
                      # Test without mapping
                      docker run $IMAGE_NAME:latest

                      # Test with mapping
                      mkdir /tmp/outputs/
                      mkdir /tmp/samples/
                      docker run -v /tmp/outputs/:/p/outputs/ -v /tmp/samples/:/p/samples/ $IMAGE_NAME:latest
    publish-latest:
        executor: docker-publisher
        steps:
            - attach_workspace:
                  at: /tmp/workspace
            - setup_remote_docker
            - run:
                  name: Load archived Docker image
                  command: docker load -i /tmp/workspace/image.tar
            - run:
                  name: Publish Docker Image to Docker Hub
                  command: |
                      echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                      docker push $IMAGE_NAME:latest
    publish-sha:
        executor: docker-publisher
        steps:
            - attach_workspace:
                  at: /tmp/workspace
            - setup_remote_docker
            - run:
                  name: Load archived Docker image
                  command: docker load -i /tmp/workspace/image.tar
            - run:
                  name: Publish Docker Image with SHA1 hash to Docker Hub
                  command: |
                      echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                      docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
                      docker push $IMAGE_NAME:$CIRCLE_SHA1
workflows:
    version: 2
    test-build-all:
        jobs:
            - test
            - build:
                  requires:
                      - test
            - test-build:
                  requires:
                      - test
                      - build
            - publish-sha:
                  requires:
                      - test
                      - build
                      - test-build
            - publish-latest:
                  requires:
                      - test
                      - build
                      - test-build
                  filters:
                      branches:
                          only: master
